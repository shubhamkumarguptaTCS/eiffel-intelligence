#################################################################################################
#
# Copyright 2019 Ericsson AB.
# For a full list of individual contributors, please see the commit history.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
##################################################################################################
# docker-compose commands
#
# run:         docker-compose up
# stop:        docker-compose stop
# stop/remove: docker-compose down --volumes
#
# Cleanup/Remove (if needed):
#     Dangling Volumes:   docker volume rm `docker volume ls -q -f dangling=true`
#     Unused Images:      docker images -q | xargs docker rmi
#     Stopped containers: docker rm `docker ps -a -q`
#
# Maintainer: Eiffel-Community
##################################################################################################
version: "2.1"
services:
  mongodb-auth:
    restart: always
    image: bitnami/mongodb:4.4.9-debian-10-r22
    expose:
      - "27017"
    ports:
      - "27016:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    healthcheck:
        test: ["CMD-SHELL","echo", "'db.stats().ok' | mongo localhost:27017/test", "--quiet"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
          eiffel_2.0_1:
            aliases:
              - mongodb-auth
  mongodb:
    restart: always
    image: bitnami/mongodb:4.4.9-debian-10-r22
    expose:
      - "27017"
    ports:
      - "27017:27017"
    healthcheck:
        test: ["CMD-SHELL","echo", "'db.stats().ok' | mongo localhost:27017/test", "--quiet"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
          eiffel_2.0_1:
            aliases:
              - mongodb

  rabbitmq:
    restart: always
    image: "bitnami/rabbitmq:3.8-debian-9"
    expose:
      - "15672"
      - "5672"
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
        test: ["CMD-SHELL", "if rabbitmqctl status; then \nexit 0 \nfi \nexit 1"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
          eiffel_2.0_1:
            aliases:
              - rabbitmq
    environment:
      - RABBITMQ_PASSWORD=myuser
      - RABBITMQ_USERNAME=myuser
      - RABBITMQ_VHOST=/

  eiffel-er:
    restart: always
    image: "eiffelericsson/eiffel-er:0.0.67"
    expose:
      - "8080"
    ports:
      - "8084:8080"
    depends_on:
      - rabbitmq
      - mongodb
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-er
    environment:   # Overrides settings in config file in catalina folder. OBS --> skip quotes for rabbitmq.bindingKey value
                   # No config file copied to catalina folder in Dockerfile, only uses env vars below ;-)
                   # /eventrepository removed in contextpath
       - server.contextPath=/
       - server.port=8080
       - rabbitmq.host=rabbitmq
       - rabbitmq.componentName=eventrepository
       - rabbitmq.port=5672
       - rabbitmq.domainId=ei-domain
       - rabbitmq.durable=true
       - rabbitmq.user=myuser
       - rabbitmq.password=myuser
       - rabbitmq.exchangeName=ei-exchange
       - rabbitmq.bindingKey=#
       - rabbitmq.autoDelete=false
       - rabbitmq.createExchangeIfNotExisting=true
       - rabbitmq.consumerName=messageConsumer
       - mongodb.host=mongodb
       - mongodb.port=27017
       - mongodb.database=eiffel
       - mongodb.collection=events
       - mongodb.user
       - mongodb.password
       - mongodb.indexes=meta.id,links.target,links.type,meta.time,data.identity
       - mongodb.externalERs
       - search.limit=100
       - search.levels=10
       - eventrepo2.URL=
       - index.staticIndex.indexOn=false
       - index.staticIndex.filePath=src/main/resources/static_indexes.json
       - index.dynamicIndex.indexOn=false
       - index.dynamicIndex.indexCreationDay=SUNDAY
       - index.dynamicIndex.indexCreationTime=11:50:00
       - index.dynamicIndex.maxIndexesCount=5
       - index.dynamicIndex.filePath=src/main/resources/dynamic_indexing.json
       - index.dynamicIndex.fileUpdatePeriod=30
       - WAIT_MB_HOSTS=rabbitmq:15672
       - WAIT_DB_HOSTS=mongodb:MONGODB_PORT


  jenkins:
    restart: always
    image: "bitnami/jenkins:2.138.3"
    expose:
      - "8080"
    ports:
      - "8082:8080"
    depends_on:
      - rabbitmq
      - mongodb
    volumes:
      - "./jenkins/security.groovy:/usr/share/jenkins/ref/init.groovy.d/security.groovy"
    environment:
      - JAVA_OPTS="-Djenkins.install.runSetupWizard=false" # To make sure unlock screen and plug-in install is skipped on start up
    networks:
      eiffel_2.0_1:
        aliases:
          - jenkins

  mail-server:
    image: "mailhog/mailhog"
    expose:
      - "1025"
      - "8025"
    ports:
      - "1025:1025"
      - "8025:8025"
    depends_on:
      - mongodb
    environment:
      MH_STORAGE: mongodb
      MH_MONGO_URI: mongodb:27017
      MH_MONGO_COLLECTION: messages
      MH_MONGO_DB: mailhog
    networks:
      eiffel_2.0_1:
        aliases:
          - mail-server

  ei-backend:
    restart: always
    image: "eiffelericsson/eiffel-intelligence-backend:1.0.1"
    expose:
      - "8080"
    ports:
      - "8090:8080"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
          eiffel_2.0_1:
            aliases:
              - ei-backend
    environment:       # Overrides settings in application config file
      - spring.application.name=eiffel-intelligence-backend
      - server.port=8080
      - rules.path=src/main/resources/ArtifactRules.json
      - rabbitmq.host=rabbitmq
      - rabbitmq.port=5672
      - rabbitmq.domainId=ei-domain
      - rabbitmq.componentName=ei-backend
      - rabbitmq.waitlist.queue.suffix=waitlist
      - rabbitmq.exchange.name=ei-exchange
      - rabbitmq.user=myuser
      - rabbitmq.password=myuser
      - spring.data.mongodb.uri=mongodb://mongodb:27017
      - spring.data.mongodb.database=eiffel2_intelligence
      - failed.notification.collection-name=eiffel2_FailedNotification
      - spring.mail.host=
      - spring.mail.port=
      - spring.mail.username=
      - spring.mail.password=
      - spring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false
      - er.url=eiffel-er:8084/search/
      - WAIT_MB_HOSTS=rabbitmq:15672
      - WAIT_DB_HOSTS=mongodb:27017
      - logging.level.root=OFF
      - logging.level.org.springframework.web=DEBUG
      - logging.level.com.ericsson.ei=DEBUG

  elasticsearch:
    restart: always
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.2.4"
    ports:
      - "8026:9200"
      - "8027:9300"
    depends_on:
      - mongodb
    environment:
      - ES_JAVA_OPTS=-Xms2048m -Xmx2048m
      - discovery.type=single-node
    healthcheck:
      test: "wget -q -O - http://localhost:9200/_cat/health"
      interval: 1s
      timeout: 30s
      retries: 300
    ulimits:
      memlock:
        soft: -1
        hard: -1

    networks:
          eiffel_2.0_1:
            aliases:
              - elasticsearch

  kibana:
    restart: always
    image: "docker.elastic.co/kibana/kibana:6.2.4"
    expose:
      - "8080"
    ports:
      - "8085:8080"
    depends_on:
      - elasticsearch
    environment:
      - SERVER_PORT=8080
      - SERVER_NAME=kibana.example.org
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

    networks:
          eiffel_2.0_1:
            aliases:
              - kibana

## monstache is used to sync from mongodb to elasticsearch using oplog in mongodb
  monstache:
    restart: always
    image: "rwynn/monstache:4.15.1"
    expose:
      - "8080"
    ports:
      - "8086:8080"
    depends_on:
      - mongodb
      - elasticsearch
    environment:
      - MONSTACHE_MONGO_URL=mongodb:27017
      - MONSTACHE_ES_URLS=http://elasticsearch:9200
    links:
      - elasticsearch

    networks:
          eiffel_2.0_1:
            aliases:
              - monstache

networks:
  eiffel_2.0_1:
